{"version":3,"sources":["logo.svg","components/SearchResult.js","components/SearchBox.js","components/LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["SearchResult","props","state","nominations","addNomination","bind","removeNomination","e","curr","title","currentTarget","parentNode","innerText","id","getAttribute","this","length","setState","prevState","target","disabled","alert","console","log","curent_id","current_index","map","movie","index","splice","document","getElementById","forceUpdate","className","Paper","elevation","Typography","search","result","item","Title","onClick","data","imdbID","React","Component","SearchBox","userSearch","undefined","searchResult","errorMessage","isLoading","getMovies","searchValue","a","fetch","response","json","ok","Search","value","onChange","newUserSearch","onRequestSearch","onCancelSearch","LandingPage","align","color","variant","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba1c12d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport Paper from '@material-ui/core/Paper';\n\n\nimport \"../styles/SearchResultCss.css\";\nimport { Typography } from \"@material-ui/core\";\n\n\n\nclass SearchResult extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {nominations: []}\n        this.addNomination = this.addNomination.bind(this);\n        this.removeNomination = this.removeNomination.bind(this);\n    }\n \n\n    \n\n    addNomination(e){\n        let curr = {};\n        curr.title = e.currentTarget.parentNode.innerText; \n        curr.id = e.currentTarget.getAttribute(\"data\")\n        \n        if(this.state.nominations.length < 5){\n        this.setState(prevState => ({\n            nominations: [...prevState.nominations, curr]\n          }))\n          e.target.disabled = true;\n        } else {\n            alert(\"You have selected 5 nominiees\")\n        }\n\n        console.log(this.state.nominations)\n        // var bttn = document.getElementById(`${e.currentTarget.id}`); \n        // console.log(bttn);\n        // // bttn.setAttribute(\"disabled\",true)\n        // bttn.disabled = true;\n       \n       \n\n      \n\n    }\n   \n    removeNomination(e){\n        let curent_id = e.currentTarget.parentNode.getAttribute(\"data\");\n        console.log(curent_id)\n\n        // console.log(this.state.nominations)\n        let current_index = -1\n\n        this.state.nominations.map((movie, index) => {\n            if(movie.id === curent_id){\n                \n                current_index = index\n              \n            }\n        })\n        \n        \n        \n        if(current_index >=0){\n        this.state.nominations.splice(current_index, 1)\n        const button = document.getElementById(curent_id);\n        button.disabled = false\n        }\n\n\n        \n\n        \n       \n\n\n        this.forceUpdate();\n\n        \n\n    }\n\n    \n    render(){\n        return (\n            <div className=\"root\">\n                    <Paper className=\"search-result\" elevation ={3}>\n                        <Typography>Results for \"{this.props.search}\"</Typography>\n                        <ul>\n                        {this.props.result.map((item, index) => {\n                            return (<div>\n                            <li className=\"list\" key={index}>\n                                <span>{item.Title}</span>\n                            \n                           <button className =\"button\" onClick={this.addNomination} data={item.imdbID} id={item.imdbID}>Nominate</button>\n                            \n                            </li>\n                           \n                            </div>);\n                        })}\n                        </ul>\n                        \n                    </Paper>\n                    <Paper className=\"nominationBox\" elevation ={3}>\n                    <Typography>Nominations</Typography>\n                      \n                        \n                         <ul>\n                {this.state.nominations.map((item) => {\n                    return (\n                        <div>\n                   \n                    <li className=\"list\" data={item.id}>\n                    <span>{item.title}</span>\n                    <button className =\"button\" onClick={this.removeNomination}>Remove</button>\n                    </li>\n                    </div>\n                    )\n                })}\n                  </ul>\n            \n                    </Paper>\n            </div>\n\n\n        );\n    }\n}\n\nexport default SearchResult;","import React from \"react\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport SearchBar from \"material-ui-search-bar\";\nimport SearchResult from \"./SearchResult\";\n\n\nclass SearchBox extends React.Component {\n\n    constructor(){\n        super()\n        this.state ={userSearch:undefined,\n            searchResult:undefined,\n            errorMessage: undefined,\n            isLoading: false\n        };\n\n        this.getMovies = this.getMovies.bind(this);\n    }\n\n    async getMovies(searchValue){\n\n        const response = await fetch(`http://www.omdbapi.com/?apikey=a2455e33&type=movie&s=${searchValue}`);\n        console.log(response)\n        const data = await response.json();\n        if (response.ok) {\n            this.setState({\n              searchResult: data.Search,\n              isLoading: true\n            });\n          } else {\n            this.setState({\n              errorMessage:\n                \"Sorry ! Something has gone wrong, please try again!\",\n            });\n          }\n\n        console.log(this.state.searchResult)\n\n    }\n  render() {\n    return (\n        <div>\n      <div>\n        <SearchBar value ={this.state.userSearch}\n        onChange={(newUserSearch) => this.setState({ userSearch: newUserSearch, isLoading:false })}\n        onRequestSearch={() => this.getMovies(this.state.userSearch)}\n        onCancelSearch={() => this.setState({userSearch:undefined, isLoading:false})}/>\n      </div>\n      <div>\n          {this.state.isLoading && <SearchResult result={this.state.searchResult} search={this.state.userSearch} />}\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;","import React from \"react\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport \"../styles/LandingPage.css\";\nimport SearchBox from \"./SearchBox\";\n\n\nclass LandingPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h2\">\n            {\" \"}\n            The Shoppies\n          </Typography>\n        </div>\n        <div>\n            <SearchBox />\n        </div>\n        <div className=\"footer\">\n          <Typography align=\"center\" color=\"textSecondary\" variant=\"body2\">\n            Maher Bouidani@2021 Shopify Front End Internship Challenge{\" \"}\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;","import logo from './logo.svg';\nimport './App.css';\nimport LandingPage from './components/LandingPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}